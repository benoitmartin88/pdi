set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DGPUSUPPORT")
set(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS} -DGPUSUPPORT -lineinfo")
add_executable(heatdis.exe heatdis.c cudaCode.cu)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DGPUSUPPORT")
string(STRIP ${MPI_C_LIBRARIES} MPI_C_LIBRARIES)
string(STRIP ${MPI_C_LINK_FLAGS} MPI_C_LINK_FLAGS)

target_link_libraries(heatdis.exe -L${PROJECT_BINARY_DIR}/lib fti m cuda ${MPI_C_LIBRARIES} ${CUDA_LIBRARIES} ${MPI_C_LINK_FLAGS})

set(LOCALFS $ENV{TMPDIR})  
configure_file(configH0.fti.in ${CMAKE_CURRENT_SOURCE_DIR}/configH0.fti @ONLY)
configure_file(configH1.fti.in ${CMAKE_CURRENT_SOURCE_DIR}/configH1.fti @ONLY)


set_property(TARGET heatdis.exe PROPERTY C_STANDARD 99)  
set_property(TARGET heatdis.exe APPEND PROPERTY COMPILE_FLAGS ${MPI_C_COMPILE_FLAGS})
set_property(TARGET heatdis.exe APPEND PROPERTY LINK_FLAGS ${MPI_C_LINK_FLAGS})
#set_property(TARGET heatdis.exe APPEND PROPERTY COMPILE_FLAGS "-L${CMAKE_INSTALL_PREFIX}/include")

file(INSTALL configH0.fti DESTINATION ${CMAKE_CURRENT_BINARY_DIR} PERMISSIONS OWNER_READ OWNER_WRITE  GROUP_READ GROUP_WRITE  WORLD_READ WORLD_WRITE)
file(INSTALL configH1.fti DESTINATION ${CMAKE_CURRENT_BINARY_DIR} PERMISSIONS OWNER_READ OWNER_WRITE  GROUP_READ GROUP_WRITE  WORLD_READ WORLD_WRITE)

