set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DGPUSUPPORT")
set(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS} -DGPUSUPPORT")
add_executable(dcpGPU.exe cudaCode.cu dcpGPU.c)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DGPUSUPPORT")

target_link_libraries(dcpGPU.exe fti.static ${MPI_C_LIBRARIES} m ${HDF5_LIBRARIES} ${HDF5_HL_LIBRARIES})
set_property(TARGET dcpGPU.exe APPEND PROPERTY COMPILE_FLAGS ${MPI_C_COMPILE_FLAGS})
set_property(TARGET dcpGPU.exe APPEND PROPERTY LINK_FLAGS ${MPI_C_LINK_FLAGS})

set(FULLPATH "${CMAKE_CURRENT_BINARY_DIR}")
set(DIR ${CMAKE_BINARY_DIR}/)
install(DIRECTORY DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/Local)
install(DIRECTORY DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/Global)
install(DIRECTORY DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/Meta)
install(DIRECTORY DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/chk)


configure_file(runGPU.sh.in ${CMAKE_CURRENT_SOURCE_DIR}/runGPU.sh @ONLY)
file(INSTALL runGPU.sh DESTINATION ${CMAKE_CURRENT_BINARY_DIR} PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_WRITE GROUP_EXECUTE WORLD_READ WORLD_WRITE)
file(INSTALL configs DESTINATION ${CMAKE_CURRENT_BINARY_DIR} PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ GROUP_WRITE WORLD_READ WORLD_WRITE)

file(REMOVE runGPU.sh)  

