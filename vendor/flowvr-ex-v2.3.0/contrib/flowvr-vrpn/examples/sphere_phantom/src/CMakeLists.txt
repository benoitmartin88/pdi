INCLUDE_DIRECTORIES(../include/ ${FLOWVR_INCLUDE_DIR} ${VRPN_INCLUDES} ${QUAT_INCLUDES}   ${OPENGL_INCLUDE_DIR} ${GLUT_INCLUDE_DIR})
SET(device Phantom.comp.cpp)

ADD_LIBRARY(device.comp SHARED ${device})
TARGET_LINK_LIBRARIES(device.comp  ${FLOWVR_base_LIBRARY}  ${FLOWVR_app_LIBRARY} ${FLOWVR_app_comp_LIBRARY}) 
SET_TARGET_PROPERTIES(device.comp PROPERTIES SOVERSION ${PROJECT_VERSION_MAJOR} VERSION ${PROJECT_VERSION})
INSTALL(TARGETS device.comp LIBRARY DESTINATION lib)

IF(SIMULATED_INSTALLED)  
  SET(simulateddevice SimulatedPhantom.comp.cpp)  
  ADD_LIBRARY(simulateddevice.comp SHARED ${simulateddevice})
  TARGET_LINK_LIBRARIES(simulateddevice.comp  ${FLOWVR_base_LIBRARY}  ${FLOWVR_app_LIBRARY} ${FLOWVR_app_comp_LIBRARY}) 
  SET_TARGET_PROPERTIES(simulateddevice.comp PROPERTIES SOVERSION ${PROJECT_VERSION_MAJOR} VERSION ${PROJECT_VERSION})
  INSTALL(TARGETS simulateddevice.comp LIBRARY DESTINATION lib)
ENDIF(SIMULATED_INSTALLED)  

# SOURCE FILES
SET(components-SRC ${app}.comp.cpp)

#ADD_TEST(${app}.comp_LIBRARY_TEST "flowvr-test" "${LIB_DIR}/lib${app}.comp${CMAKE_SHARED_LIBRARY_SUFFIX}")
#SET_TESTS_PROPERTIES(${app}.comp_LIBRARY_TEST PROPERTIES PASS_REGULAR_EXPRESSION "successfully tested")

# COMPONENT LIBRARY
ADD_LIBRARY(${app}.comp SHARED  ${components-SRC})

IF(SIMULATED_INSTALLED)
  TARGET_LINK_LIBRARIES(${app}.comp ${FLOWVR_base_LIBRARY} ${FLOWVR_mod_LIBRARY} ${FLOWVR_ftl_LIBRARY} ${FLOWVR_app_LIBRARY} ${FLOWVR_app_comp_LIBRARY} ${OPENGL_LIBRARIES} ${GLUT_LIBRARIES} device.comp simulateddevice.comp)
ELSE(SIMULATED_INSTALLED)
  TARGET_LINK_LIBRARIES(${app}.comp ${FLOWVR_base_LIBRARY} ${FLOWVR_mod_LIBRARY} ${FLOWVR_ftl_LIBRARY} ${FLOWVR_app_LIBRARY} ${FLOWVR_app_comp_LIBRARY} ${OPENGL_LIBRARIES} ${GLUT_LIBRARIES} device.comp)
ENDIF(SIMULATED_INSTALLED)

SET_TARGET_PROPERTIES(${app}.comp PROPERTIES SOVERSION ${PROJECT_VERSION_MAJOR} VERSION ${PROJECT_VERSION})
INSTALL(TARGETS ${app}.comp LIBRARY DESTINATION ${LIB_DIR} )



# MODULE  BINARIES

IF(BUILD_MODULES)
  
  ADD_EXECUTABLE(viewer_phantom viewer_phantom.cpp)
  
  TARGET_LINK_LIBRARIES(viewer_phantom ${FLOWVR_base_LIBRARY} ${FLOWVR_app_LIBRARY} ${FLOWVR_app_comp_LIBRARY} ${FLOWVR_ftl_LIBRARY} ${FLOWVR_mod_LIBRARY} ${OPENGL_LIBRARIES} ${GLUT_LIBRARIES} ${QUAT_LIBRARY} ${VRPN_LIBRARY} )
  INSTALL(TARGETS viewer_phantom  DESTINATION ${MODULE_DIR})	
  
  ADD_EXECUTABLE(force_generation force_generation.cpp)
  
  TARGET_LINK_LIBRARIES(force_generation ${FLOWVR_base_LIBRARY} ${FLOWVR_app_LIBRARY} ${FLOWVR_app_comp_LIBRARY} ${FLOWVR_ftl_LIBRARY} ${FLOWVR_mod_LIBRARY} ${OPENGL_LIBRARIES} ${GLUT_LIBRARIES} ${QUAT_LIBRARY} ${VRPN_LIBRARY} ${FLOWVRVRPN_LIBRARY})
  INSTALL(TARGETS force_generation  DESTINATION ${MODULE_DIR})	
  


ENDIF(BUILD_MODULES)

