# - Try to find LibCGraph
# Once done this will define
#
#  LIBCGRAPH_FOUND - system has LibCGraph
#  LIBCGRAPH_INCLUDE_DIR - the LibCGraph include directory
#  LIBCGRAPH_LIBRARIES - Link these to use LibCGraph
#  LIBCGRAPH_DEFINITIONS - Compiler switches required for using LibCGraph
#  LIBCGRAPH_VERSION - LibCGraph Version found
#


# use pkg-config to get the directories and then use these values
# in the FIND_PATH() and FIND_LIBRARY() calls
INCLUDE(FindPkgConfig)
pkg_search_module(PKG_LIBCGRAPH  libcgraph)

SET(LIBCGRAPH_DEFINITIONS ${PKG_LIBCGRAPH_CFLAGS})
FIND_PATH(LIBCGRAPH_INCLUDE_DIR NAMES cgraph.h
  PATHS
  ${PKG_LIBCGRAPH_INCLUDE_DIRS}
  ENV CPATH
  /usr/include
  /usr/local/include
  PATH_SUFFIXES graphviz
  NO_DEFAULT_PATH
)

FIND_LIBRARY(LIBCGRAPH_LIBRARIES NAMES cgraph
  PATHS
  ${PKG_LIBCGRAPH_LIBRARY_DIRS}
  ENV LD_LIBRARY_PATH
  ENV LIBRARY_PATH
  /usr/lib64
  /usr/lib
  /usr/local/lib64
  /usr/local/lib
  NO_DEFAULT_PATH
)

IF(LIBCGRAPH_INCLUDE_DIR AND LIBCGRAPH_LIBRARIES)
   SET(LIBCGRAPH_FOUND TRUE)
ELSE(LIBCGRAPH_INCLUDE_DIR AND LIBCGRAPH_LIBRARIES)
   SET(LIBCGRAPH_FOUND FALSE)
ENDIF(LIBCGRAPH_INCLUDE_DIR AND LIBCGRAPH_LIBRARIES)

IF(LIBCGRAPH_FOUND)
  IF(NOT LibCGraph_FIND_QUIETLY)
    MESSAGE(STATUS "Found LibCGraph: ${LIBCGRAPH_LIBRARIES}")
  ENDIF(NOT LibCGraph_FIND_QUIETLY)
ELSE(LIBCGRAPH_FOUND)
  IF(LibCGraph_FIND_REQUIRED)
    MESSAGE(FATAL_ERROR "Could not find LibCGraph")
  ENDIF(LibCGraph_FIND_REQUIRED)
ENDIF(LIBCGRAPH_FOUND)

EXEC_PROGRAM(${PKG_CONFIG_EXECUTABLE} ARGS libcgraph --modversion OUTPUT_VARIABLE LIBCGRAPH_VERSION)

# show the LIBCGRAPH_INCLUDE_DIR and LIBCGRAPH_LIBRARIES variables only in the advanced view
  MARK_AS_ADVANCED(LIBCGRAPH_INCLUDE_DIR LIBCGRAPH_LIBRARIES )

