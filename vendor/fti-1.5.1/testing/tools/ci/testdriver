#!/bin/bash
#   Copyright (c) 2017 Leonardo A. Bautista-Gomez
#   All rights reserved
#
#   @file   ci_testdriver
#   @author Alexandre de Limas Santana (alexandre.delimassantana@bsc.es)
#   @date   May, 2020
#
# Brief:
# A proxy script that calls ITF testdriver contained in the src directory.
#
# Details:
# Configures the environment and set up default arguments used in Jenkins.
# Use this script if replicating the conditions in the CI environment.
# Keep in mind that this script is used only for checks after compiling FTI.
# CMake must configure the ITF modules in accord to FTI compilation parameters.
# The testdriver can be used without FTI module for non-FTI test cases.
# To do that, call it without from the src folder and without --path-modules.

# FTI directories related to ITF tests on CI
declare -A dirs=()
dirs['root']=$(git rev-parse --show-toplevel)
dirs['src']=${dirs['root']}/testing
dirs['compiled']=${dirs['root']}/build/testing

# Parse the arguments to check the script execution mode find/run
mode='run'              # Default mode is Run
declare -a arguments=() # CI Testdriver parameters
while [[ $# -gt 0 ]]; do
    case $1 in
    --find)
        mode='find'
        shift
        ;;
    --run)
        mode='run'
        shift
        ;;
    *)
        arguments+=($1)
        shift
        ;;
    esac
done

case $mode in
run)
    # Brief:
    # Invoke the testdriver with CI parameters to execute ITF test suites.
    #
    # Arguments:
    # ITF file paths containing suite of tests (see find mode).
    #
    # Example:
    # cd /path/to/FTI/build/testing
    # itf/ci_testdriver local/standard/standard.itf

    export MPIRUN_ARGS=--oversubscribe
    echo "[Testdriver] Running suites: " ${arguments[@]}
    ${dirs['src']}/tools/itf/testdriver/testdriver \
        --path-modules "${dirs['compiled']}/itf/modules" \
        --filter recovername:standard:iolib=3 \
        --filter standard:ckpt_disruption:expected=fail \
        ${arguments[@]}
    retval=$?
    unset MPIRUN_ARGS
    exit $retval
    ;;
find)
    # Brief:
    # Echo the ITF suite files related to a given CI stage.
    #
    # Arguments:
    # One or more of the CI stage names below.
    #
    # compilation: compilation checks (i.e compile with other CMake versions)
    # core:        FTI core behavior
    # features:    FTI additional features
    for step in ${arguments[@]}; do
        case $step in
        core)
            find "${dirs['compiled']}/suites/core" -iname *.itf
            ;;
        compilation)
            find "${dirs['src']}/suites/compilation" -iname *.itf
            ;;
        features)
            find "${dirs['compiled']}/suites/features" -iname *.itf
            ;;
        esac
    done
    ;;
esac
