#!/bin/bash

setup() {
    iolib=$(iolib_name_to_id 'POSIX')
    head=0

    param_register 'recovery'
    itf_nranks=8
}

prepare_fti() {
    fti_config_set 'node_size' '2'

    fti_config_set_inline
    
    fti_config_set "enable_dcp" '1'
    fti_config_set "dcp_mode" '1'
    fti_config_set 'ckpt_l1' '2'

    fti_config_set "dcp_block_size" '4096'
    fti_config_set "dcp_stack_size" '10'
}

runtest() {
    local app='@CMAKE_CURRENT_BINARY_DIR@/checkDCPPosix.exe'
    local crash_on_iter=1
    local diffsizes=0

    if [ $recovery == 'FTI_Recover' ]; then
        recovery=0
    else
        recovery=1
    fi

    app_run_success $app $itf_cfgfile $crash_on_iter $diffsizes $recovery

    for i in $(seq 1 6); do
        app_run_success $app $itf_cfgfile $i $diffsizes $recovery
        local exec_id="$(fti_config_get 'exec_id')"
        local global_dir="$(fti_config_get 'glbl_dir')"

        if [ "$i" -ne "6" ]; then
            local rank=$(echo $((RANDOM % $itf_nranks)))
            local bytesToRemove=$(echo $((RANDOM % (10 * 1024 * 1024))))
            local corruptedFile="$global_dir/$exec_id/dCP/dcp-id0-rank$rank.fti"
            truncate -s -$bytesToRemove $corruptedFile
        fi
    done
    grep -q "\[SUCCESSFUL\]" $itf_tstdout
    local retv=$?
    
    assert_equals $retv 0 'FTI should recover from corrupted data'
}

teardown() {
    unset head iolib
}
