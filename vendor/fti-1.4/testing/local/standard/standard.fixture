#!/bin/bash

setup() {
    param_register 'iolib' 'level' 'icp' 'diffsize' 'head' 'keep'

    write_dir='checks'
    mkdir -p $write_dir
}

prepare_fti() {
    fti_config_set_inline

    if [ $head -eq 1 ] && [ $level -gt 1 ]; then
        fti_config_set "inline_l$level" '0'
    fi
}

runtest() {
    local app='@CMAKE_CURRENT_BINARY_DIR@/check.exe'

    if [ $keep -eq 0 ]
    then
        # we simulate a crash when keep=0 to test standard behavior
        local crash=1
    else
        # we do not crash on keep=1 to test flushing the last checkpoint
        local crash=0
    fi

    app_run_success $app $itf_cfgfile $crash $level $diffsize $icp $write_dir

    # When keep=1, FTI flushes the last checkpoint to global
    # It also writes 2 into 'failure' as to notify this behavior
    if [ $keep -eq 1 ]
    then
        check_equals $(fti_config_get 'failure') '2'
    fi
    
    # This run should succeed and be a restart in both keep scenarios
    # On keep=1, it should restart from the ckpt pushed to global
    # On keep=0, it should restart from the last ckpt in local
    app_run_success $app $itf_cfgfile 0 $level $diffsize $icp $write_dir
    pass
}

teardown() {
    rm -rf $write_dir
    unset write_dir
}
