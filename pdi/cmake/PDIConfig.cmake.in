################################################################################
# Copyright (C) 2015-2019 Commissariat a l'energie atomique et aux energies alternatives (CEA)
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#     * Neither the name of the <organization> nor the
#     names of its contributors may be used to endorse or promote products
#     derived from this software without specific prior written permission.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
################################################################################

cmake_minimum_required(VERSION 3.5)
list(INSERT CMAKE_MODULE_PATH 0 "${CMAKE_CURRENT_LIST_DIR}")


# by default, if no component is specified, look for all
if("xx" STREQUAL "x${PDI_FIND_COMPONENTS}x")
	set(PDI_FIND_COMPONENTS C f90 python)
	set(PDI_FIND_REQUIRED_C TRUE)
	set(PDI_FIND_REQUIRED_f90 FALSE)
	set(PDI_FIND_REQUIRED_python FALSE)
endif()

include(${CMAKE_CURRENT_LIST_DIR}/CMakeFindDependencyMacro.cmake)

set(PARACONF_COMPONENTS @PARACONF_COMPONENTS@)
find_dependency(paraconf 0.4.0 COMPONENTS ${PARACONF_COMPONENTS})
find_dependency(spdlog 1.3.1)

include("${CMAKE_CURRENT_LIST_DIR}/pdi.cmake")

if(NOT TARGET PDI::pdi)
	set(PDI_FOUND "FALSE")
	if(NOT "${PDI_FIND_QUIETLY}")
		message(WARNING "PDI: required component \"C\" not found")
	endif()
endif()

# Compute the installation prefix relative to this file.
get_filename_component(_PDI_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_PDI_IMPORT_PREFIX "${_PDI_IMPORT_PREFIX}" PATH)
get_filename_component(_PDI_IMPORT_PREFIX "${_PDI_IMPORT_PREFIX}" PATH)
get_filename_component(_PDI_IMPORT_PREFIX "${_PDI_IMPORT_PREFIX}" PATH)
if(_PDI_IMPORT_PREFIX STREQUAL "/")
  set(_PDI_IMPORT_PREFIX "")
endif()

set(PDI_pdirun_EXECUTABLE "${_PDI_IMPORT_PREFIX}/@CMAKE_INSTALL_BINDIR@/pdirun" CACHE PATH "path to the pdirun executable")
add_executable(PDI::pdirun IMPORTED)
set_target_properties(PDI::pdirun PROPERTIES IMPORTED_LOCATION "${PDI_pdirun_EXECUTABLE}")

# currently, only f90 & python are supported
list(REMOVE_ITEM PDI_FIND_COMPONENTS "C")
foreach(_PDI_ONE_COMPONENT ${PDI_FIND_COMPONENTS})
	if("${_PDI_ONE_COMPONENT}" STREQUAL "f90")
		if(NOT TARGET "PDI::pdi_f90")
			if("${PDI_FIND_REQUIRED_f90}")
				set(PDI_FOUND "FALSE")
			endif()
			if(NOT "${PDI_FIND_QUIETLY}")
				message(WARNING "PDI: component \"f90\" not found")
			endif()
		endif()
	elseif("${_PDI_ONE_COMPONENT}" STREQUAL "python")
		if(TARGET "PDI::pdi_python")
			find_dependency(pybind11 2.3.0)
			set(PDI_PYTHON_PATH "${_PDI_IMPORT_PREFIX}/@Python3Path_INSTALL_SITEARCHDIR@" CACHE STRING "Path to PDI python library")
		else()
			if("${PDI_FIND_REQUIRED_python}")
				set(PDI_FOUND "FALSE")
				if(NOT "${PDI_FIND_QUIETLY}")
					message(WARNING "PDI: required component \"python\" not found")
				endif()
			else()
				if(NOT "${PDI_FIND_QUIETLY}")
					message("PDI: optional component \"python\" not found")
				endif()
			endif()
		endif()
	endif()
endforeach()

unset(_PDI_IMPORT_PREFIX)
