<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=14
fontfamily=Monospaced // SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>4</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>100</x>
      <y>568</y>
      <w>260</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>PDI  API
--
--
+ PDI_init(PC_tree_t conf, MPI_Comm *world) : PDI_status_t
+ PDI_finalize() : PDI_status_t 
+ PDI_event(const char *event) : PDI_status_t
+ PDI_access(const char *name, void **buffer, PDI_inout_t inout) : PDI_status_t
+ PDI_share(const char *name, void *data_dat, PDI_inout_t access) : PDI_status_t
+ PDI_release(const char *name) : PDI_status_t
+ PDI_reclaim(const char *name) : PDI_status_t

+ PDI_expose(const char *name, const void *data) : PDI_status_t
+ PDI_exchange(const char *name, void *data) : PDI_status_t
+ PDI_export(const char *name, const void *data) : PDI_status_t
+ PDI_import(const char *name, void *data) :PDI_status_t

+ PDI_transaction_begin(const char *name) : PDI_status_t
+ PDI_transaction_end() : PDI_status_t
- add_to_transaction(const char *name) : void 
--
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>416</x>
      <y>424</y>
      <w>212</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>PDI_data_t
--
+name : char*
+config : PC_tree_t
+nb_content : int
--
+PDI_data_destroy(PDI_data_t *var) : PDI_status_t
+PDI_data_copy(PDI_data_t *to, const PDI_data_t *from) : PDI_status_t
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>104</x>
      <y>336</y>
      <w>192</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>conf
--
+ load_conf(PC_tree_t node) : PDI_status_t 
+ load_data(PC_tree_t node, PDI_datakind_t kind) : PDI_status_t
--
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>668</x>
      <y>448</y>
      <w>80</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>PDI_data_value_t
--
+access : int
+data : void*
--

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>928</x>
      <y>564</y>
      <w>104</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>PDI_struct_type_s
--
+nb_member : int
+members : PDI_member_t*
--
+struct_datatype_load(PC_tree_t node, PDI_struct_type_t *type) : PDI_status_t 
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>760</x>
      <y>424</y>
      <w>300</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>/PDI_datatype_t/
--
+kind : PDI_type_kind_t
+Datatype_union
--
+PDI_datatype_init_scalar  (PDI_datatype_t *result, PDI_scalar_type_t scalar_type) : PDI_status_t
+PDI_datatype_init_array  (PDI_datatype_t *result, const PDI_datatype_t *elem_type, int ndims, const PDI_value_t *sizes, const PDI_value_t *subsizes, const PDI_value_t *starts) : PDI_status_t
+PDI_datatype_copy  (PDI_datatype_t *result, const PDI_datatype_t *from) : PDI_status_t
+PDI_datatype_densify  (PDI_datatype_t *result, const PDI_datatype_t *oldtype) : PDI_status_t
+PDI_datatype_load  (PDI_datatype_t *result, PC_tree_t node) : PDI_status_t
+PDI_datatype_destroy  (PDI_datatype_t *type) : PDI_status_t
+PDI_datatype_is_dense  (const PDI_datatype_t *type, int *is_dense) : PDI_status_t
+PDI_datatype_datasize  (const PDI_datatype_t *type, size_t *result) : PDI_status_t
+PDI_datatype_buffersize  (const PDI_datatype_t *type, size_t *result) : PDI_status_t
+PDI_buffer_copy  (void *to, const PDI_datatype_t *to_type, const void *from, const PDI_datatype_t *from_type) : PDI_status_t
+PDI_datatype_is_dense  (const PDI_datatype_t *type, int *is_dense) : PDI_status_t
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>596</x>
      <y>600</y>
      <w>244</w>
      <h>68</h>
    </coordinates>
    <panel_attributes>PDI_array_type_t
--
+ndims : int
+sizes : PDI_value_t*
+subsizes : PDI_value_t*
+starts : PDI_value_t*
+type : PDI_datatype_t
--
+array_datatype_load(PC_tree_t node, PDI_array_type_t *type) : PDI_status_t 
+array_datatype_destroy(PDI_array_type_t *type) : PDI_status_t 
+array_datatype_is_dense(const PDI_array_type_t *type, int *is_dense) : PDI_status_t 



</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1056</x>
      <y>564</y>
      <w>96</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>PDI_member_s
--
+displacement : PDI_value_t
+type : PDI_datatype_t
+name : char*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1164</x>
      <y>580</y>
      <w>252</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>buffer_descriptor_t
--
+ndims : int
+sizes : size_t*
+subsizes : size_t*
+starts : size_t*
+dense_size :size_t
--
+datatype_bufdesc(const PDI_datatype_t *type, buffer_descriptor_t *result) : PDI_status_t 

+buffer_do_copy(void *to, const buffer_descriptor_t *to_desc, const void *from, const buffer_descriptor_t *from_desc) : PDI_status_t 
+bufdesc_destroy(buffer_descriptor_t *result) : PDI_status_t
+bufdesc_datasize(const buffer_descriptor_t *bufdesc, size_t *result) : PDI_status_t
+bufdesc_buffersize(const buffer_descriptor_t *bufdesc, size_t *result) : PDI_status_t
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>876</x>
      <y>620</y>
      <w>204</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>enum PDI_order_t
--
+ridx(int ordered_index, PDI_order_t order, int size) : int
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>44</x>
      <y>292</y>
      <w>324</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>plugin_loader
--
+name : char* 
--
-plugin_loader_load(char *plugin_name, PC_tree_t node, MPI_Comm *world, PDI_plugin_t *plugin) : PDI_status_t
+plugin_loader_tryload(PC_tree_t conf, int plugin_id, MPI_Comm *world) : PDI_status_t

bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>428</x>
      <y>548</y>
      <w>268</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>enum PDI_scalar_type_t
--

--
+scalar_datatype_load(PC_tree_t node, PDI_scalar_type_t *type) : PDI_status_t 
+scalar_datatype_bufdesc(PDI_scalar_type_t type, buffer_descriptor_t *result) : PDI_status_t 
+scalar_datatype_bufdesc(PDI_scalar_type_t type, buffer_descriptor_t *result) : PDI_status_t</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>124</x>
      <y>468</y>
      <w>192</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>PDI_state_t
--
+PDI_comm : MPI_Comm 
+nb_data : int 
+transaction : char*
+nb_transaction_data : int 
+transaction_data : PDI_data_t**
+nb_plugins : int 

--
-PDI_find_data(const char *name) : PDI_data_t*
-PDI_data_unlink(PDI_data_t *data, int content_id) : PDI_status_t


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>552</x>
      <y>252</y>
      <w>228</w>
      <h>68</h>
    </coordinates>
    <panel_attributes>errctx_t
--
+handler : PDI_errhandler_t
+buffer : char*
+buffer_size : long 
--
+assert_status(PDI_status_t status, const char *message, void *context) : void
+warn_status(PDI_status_t status, const char *message, void *context) : void
+context_destroy(void *context) : void
+context_init() : void
+get_context() :* errctx_t</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>616</x>
      <y>732</y>
      <w>228</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>/PDI_value_t/
--
--
+PDI_value_parse(const char *val_str, PDI_value_t *value) : PDI_status_t
+PDI_value_destroy(PDI_value_t *value) : PDI_status_t
+PDI_value_int(const PDI_value_t *value, long *res) : PDI_status_t
+PDI_value_str(const PDI_value_t *value, char **res) : PDI_status_t
+PDI_value_copy(const PDI_value_t *value, PDI_value_t *copy) : PDI_status_t
--
-parse_intval(char const **val_str, PDI_value_t *value, int level) : PDI_status_t
-parse_id(char const **val_str, int *id_len) : PDI_status_t
-parse_ref(char const **val_str, PDI_refval_t *value) : PDI_status_t
-parse_const(char const **val_str, long *value) : PDI_status_t
-parse_term(char const **val_str, PDI_value_t *value) : PDI_status_t
-parse_op(char const **val_str, int level, PDI_exprop_t *value) : PDI_status_t
-parse_intval(char const **val_str, PDI_value_t *value, int level) : PDI_status_t
-parse_strval(char const **val_str, PDI_value_t *value) : PDI_status_t
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>788</x>
      <y>252</y>
      <w>244</w>
      <h>68</h>
    </coordinates>
    <panel_attributes>Status
--
+forward_PC_error(PC_status_t status, const char *message, void *context) : void
+PDI_status_t PDI_make_err(PDI_status_t status, const char *message, ...) :
+PC_errhandler_t intercept_PC_errors() :
+PDI_ASSERT_HANDLER : PDI_errhandler_t const 
+PDI_WARN_HANDLER : PDI_errhandler_t const 
+PDI_NULL_HANDLER : PDI_errhandler_t const 
+PDI_errhandler(PDI_errhandler_t new_handler) : PDI_errhandler_t
+PDI_errmsg() : char*

--

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>120</x>
      <y>808</y>
      <w>220</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>Utils
--

--
?? tcopy(const PDI_datatype_t *type, void *to, void *from) : PDI_status_t 
+*vmsprintf(const char *fmt, va_list ap) : char 
+*msprintf(const char *fmt, ...) : char 
+*mstrcat(char *dest, size_t dlen, const char *src, size_t slen) : char 
+*strdup(const char *s) : char 

bg=gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>232</x>
      <y>712</y>
      <w>88</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>enum PDI_memmode_t  
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>852</x>
      <y>888</y>
      <w>208</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>PDI_exprval_t
--
+nb_value : int
+values : PDI_value_t*
--
+exprval_destroy(PDI_exprval_t *value) : PDI_status_t
+eval_exprval(PDI_exprval_t *val, long *res) : PDI_status_t
+exprval_copy(PDI_exprval_t *value, PDI_exprval_t *copy) : PDI_status_t
+exprval_destroy(PDI_exprval_t *value) : PDI_status_t

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>428</x>
      <y>888</y>
      <w>208</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>PDI_refval_t
--
+ref : PDI_data_t*
+idx : PDI_value_t*
+nb_idx : int
--
+eval_refval(PDI_refval_t *val, long *res) : PDI_status_t
+refval_copy(PDI_refval_t *value, PDI_refval_t *copy) : PDI_status_t
+refval_destroy(PDI_refval_t *value) : PDI_status_t</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>640</x>
      <y>888</y>
      <w>208</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>PDI_strval_t
--
+str : char*
+nb_values : int
+values : PDI_value_t*
+value_pos : int*
--
+eval_strval(PDI_strval_t *val, char **res) : PDI_status_t
+strval_copy(PDI_strval_t *value, PDI_strval_t *copy) : PDI_status_t
+strval_destroy(PDI_strval_t *value) : PDI_status_t

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1088</x>
      <y>912</y>
      <w>100</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>enum PDI_exprop_t
--

--
+op_level(PDI_exprop_t op) : int

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>748</x>
      <y>348</y>
      <w>72</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>enum PDI_status_t  
--

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>668</x>
      <y>432</y>
      <w>80</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>enum PDI_datakind_t 
--


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>132</x>
      <y>712</y>
      <w>76</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>enum PDI_inout_t 
--

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>432</x>
      <y>292</y>
      <w>108</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>PDI_errhandler_t
--
+func : PDI_errfunc_f
+context : void*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>520</x>
      <y>340</y>
      <w>208</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>PDI_errfunc_f
--
/+call(PDI_status_t status, const char *message, void *context) : void/
--
+init(PDI_status_t status, const char *message, void *context)

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>556</x>
      <y>520</y>
      <w>332</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=.&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;40.0;810.0;40.0;810.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>624</x>
      <y>448</y>
      <w>52</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;&gt;&gt;&gt;
m2=1...n</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>716</x>
      <y>520</y>
      <w>188</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=.&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;200.0;10.0;170.0;450.0;170.0;450.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>908</x>
      <y>520</y>
      <w>28</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=.&gt;&gt;</panel_attributes>
    <additional_attributes>50.0;120.0;10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1028</x>
      <y>564</y>
      <w>36</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>70.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>412</x>
      <y>404</y>
      <w>1020</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>data
--
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>624</x>
      <y>432</y>
      <w>52</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>624</x>
      <y>424</y>
      <w>144</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>340.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>416</x>
      <y>232</y>
      <w>636</w>
      <h>148</h>
    </coordinates>
    <panel_attributes>errors
--
bg=white
fg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>32</x>
      <y>276</y>
      <w>344</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>loading
--
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1076</x>
      <y>620</y>
      <w>96</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;220.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>836</x>
      <y>620</y>
      <w>48</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>312</x>
      <y>424</y>
      <w>112</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;&gt;&gt;&gt;
m2=0...nb_data
data</panel_attributes>
    <additional_attributes>260.0;10.0;150.0;10.0;150.0;220.0;10.0;220.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>160</x>
      <y>404</y>
      <w>156</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>PDI_plugin_t
--
--
+PDI_data_start(PDI_data_t *data) : PDI_status_t
+PDI_data_end(PDI_data_t *data) : PDI_status_t
+PDI_event(char *event) : PDI_status_t
+init(PC_tree_t conf, MPI_Comm World) : PDI_status_t
+finalize() : PDI_status_t


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>312</x>
      <y>408</y>
      <w>76</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;&gt;&gt;&gt;
m2=1...nb_plugins
plugins</panel_attributes>
    <additional_attributes>10.0;10.0;120.0;10.0;120.0;210.0;10.0;210.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>312</x>
      <y>304</y>
      <w>92</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;&gt;&gt;&gt;
impl</panel_attributes>
    <additional_attributes>10.0;260.0;180.0;260.0;180.0;10.0;140.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>424</x>
      <y>832</y>
      <w>252</w>
      <h>68</h>
    </coordinates>
    <panel_attributes>lt=.&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;150.0;610.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>712</x>
      <y>832</y>
      <w>12</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=.&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;140.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>760</x>
      <y>832</y>
      <w>184</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=.&gt;&gt;</panel_attributes>
    <additional_attributes>440.0;140.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1056</x>
      <y>912</y>
      <w>40</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>952</x>
      <y>852</y>
      <w>100</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>PDI_constval_t
--
--



</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>412</x>
      <y>716</y>
      <w>792</w>
      <h>244</h>
    </coordinates>
    <panel_attributes>expression
--
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>812</x>
      <y>832</y>
      <w>148</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=.&gt;&gt;</panel_attributes>
    <additional_attributes>350.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>312</x>
      <y>432</y>
      <w>124</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;&gt;&gt;&gt;
m2=0...nb_transaction
transaction</panel_attributes>
    <additional_attributes>260.0;10.0;200.0;10.0;200.0;230.0;10.0;230.0</additional_attributes>
  </element>
</diagram>
