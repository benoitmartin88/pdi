pdi:
  metadata:
      input: int
      ni: int
      nj: int
      ni_ghost: int
      nj_ghost: int
      rank: int
  data: # values that can not be referenced using $syntax
      reals:
          type: double
          sizes: [$ni, $nj]
          subsizes: [$ni - (2*$ni_ghost) , $nj - (2*$nj_ghost)]
          starts: [$ni_ghost, $nj_ghost] # offset
          order: fortran
      values:
          type: int
          sizes: [$ni , $nj]
          subsizes: [$ni - (2*$ni_ghost) , $nj - (2*$nj_ghost)]
          starts: [$ni_ghost, $nj_ghost] # offset
          order: fortran
      #buffer used by utilities
      reals_nobuf:
          type: double
          sizes: [$ni - (2*$ni_ghost) , $nj - (2*$nj_ghost)]
      values_nobuf:
          type: int
          sizes: [$ni - (2*$ni_ghost) , $nj - (2*$nj_ghost)]
      cp_reals:
          type: double
          sizes: [$ni - (2*$ni_ghost) , $nj - (2*$nj_ghost)]
      cp_values:
          type: int
          sizes: [$ni - (2*$ni_ghost) , $nj - (2*$nj_ghost)]
  plugins:
      utilities:
          extract_subarray:
              event: no_event
              in: reals
              out: reals_nobuf
          extract_subarray:
              event: no_event
              in: values
              out: values_nobuf
      declh5:
          defaults:
              outputs:
                  select: 1
                  file: test_02_rank_${rank}_f90_slice.h5
              inputs:
                  select: 1
                  file: test_02_rank_${rank}_f90_slice.h5
          outputs:
              ni:
              nj:
              ni_ghost:
              nj_ghost:
              reals_nobuf:
                var: cp_reals
              values_nobuf:
                var: cp_values
          inputs:
              cp_reals:
              cp_values:
